{"ast":null,"code":"var _jsxFileName = \"/Users/rkhatri/Documents/reactapp/failedextractor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState('');\n\n  // Function to analyze JSON data and extract unique tags\n  const analyzeJSON = jsonData => {\n    const matchingTagsSet = new Set();\n    for (const data of jsonData) {\n      if (data.elements && Array.isArray(data.elements)) {\n        for (const element of data.elements) {\n          if (element.tags && Array.isArray(element.tags)) {\n            for (const step of element.steps) {\n              if (step.result && step.result.status === 'failed') {\n                const tesTags = element.tags.filter(tag => tag.name.startsWith('@TES-')).map(tag => tag.name);\n                tesTags.forEach(tag => matchingTagsSet.add(tag));\n              }\n            }\n          }\n        }\n      } else {\n        console.error('JSON data is not in the expected format.');\n      }\n    }\n    return Array.from(matchingTagsSet);\n  };\n\n  // Event handler for file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const jsonData = JSON.parse(e.target.result);\n        const uniqueMatchingTags = analyzeJSON(jsonData);\n        const formattedTags = uniqueMatchingTags.join(' or ');\n        setResult(`Unique tags associated with failed steps and starting with '@TES-': ${formattedTags}`);\n      } catch (error) {\n        console.error('Error reading JSON file:', error);\n        setResult('Error reading JSON file. Please try again.');\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Event handler for drag over\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n\n  // Event handler for file drop\n  const handleDrop = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const jsonData = JSON.parse(e.target.result);\n        const uniqueMatchingTags = analyzeJSON(jsonData);\n        const formattedTags = uniqueMatchingTags.join(' or ');\n        setResult(`Unique tags associated with failed steps and starting with '@TES-': ${formattedTags}`);\n      } catch (error) {\n        console.error('Error reading JSON file:', error);\n        setResult('Error reading JSON file. Please try again.');\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cucumber Failed Test ID Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop your JSON file here, or click to browse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload,\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"output\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+gLbWhCz1wxZi8Q3iizH9D49vKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","result","setResult","analyzeJSON","jsonData","matchingTagsSet","Set","data","elements","Array","isArray","element","tags","step","steps","status","tesTags","filter","tag","name","startsWith","map","forEach","add","console","error","from","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","JSON","parse","uniqueMatchingTags","formattedTags","join","readAsText","handleDragOver","preventDefault","handleDrop","dataTransfer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","type","onChange","accept","id","_c","$RefreshReg$"],"sources":["/Users/rkhatri/Documents/reactapp/failedextractor/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [result, setResult] = useState('');\n\n  // Function to analyze JSON data and extract unique tags\n  const analyzeJSON = (jsonData) => {\n    const matchingTagsSet = new Set();\n\n    for (const data of jsonData) {\n      if (data.elements && Array.isArray(data.elements)) {\n        for (const element of data.elements) {\n          if (element.tags && Array.isArray(element.tags)) {\n            for (const step of element.steps) {\n              if (step.result && step.result.status === 'failed') {\n                const tesTags = element.tags.filter(tag => tag.name.startsWith('@TES-')).map(tag => tag.name);\n                tesTags.forEach(tag => matchingTagsSet.add(tag));\n              }\n            }\n          }\n        }\n      } else {\n        console.error('JSON data is not in the expected format.');\n      }\n    }\n\n    return Array.from(matchingTagsSet);\n  };\n\n  // Event handler for file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      try {\n        const jsonData = JSON.parse(e.target.result);\n        const uniqueMatchingTags = analyzeJSON(jsonData);\n        const formattedTags = uniqueMatchingTags.join(' or ');\n        setResult(`Unique tags associated with failed steps and starting with '@TES-': ${formattedTags}`);\n      } catch (error) {\n        console.error('Error reading JSON file:', error);\n        setResult('Error reading JSON file. Please try again.');\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  // Event handler for drag over\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  // Event handler for file drop\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      try {\n        const jsonData = JSON.parse(e.target.result);\n        const uniqueMatchingTags = analyzeJSON(jsonData);\n        const formattedTags = uniqueMatchingTags.join(' or ');\n        setResult(`Unique tags associated with failed steps and starting with '@TES-': ${formattedTags}`);\n      } catch (error) {\n        console.error('Error reading JSON file:', error);\n        setResult('Error reading JSON file. Please try again.');\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Cucumber Failed Test ID Extractor</h1>\n      <div className=\"file-upload\" onDragOver={handleDragOver} onDrop={handleDrop}>\n      <p>Drag and drop your JSON file here, or click to browse</p>\n        <input type=\"file\" onChange={handleFileUpload} accept=\".json\" />\n      </div>\n      <div id=\"output\">{result}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}